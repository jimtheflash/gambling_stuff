import nba_api.stats.endpoints.playbyplayv2 as pbp
import pandas as pd
import time
import os
gamelogs = './data/nba_gamelogs/nba_gamelogs_2018-19.csv'
gl = gamelogs[0]
gl
gl
gamelogs
for gl in gamelogs:
print(gl)
csv_path = gamelog_path + gl
gl_df = pd.read_csv(csv_path, dtype='str')
game_ids = list(gl_df.GAME_ID.unique())
for g in game_ids:
time.sleep(2)
print(g)
playbyplay = pbp.PlayByPlayV2(game_id=str(g), start_period=0, end_period=0)
pbp_df = playbyplay.get_data_frames()
pbp_df = pbp_df[0]
csv_string = pbp_path + g + '.csv'
pbp_df.to_csv(csv_string)
import nba_api.stats.endpoints.playbyplayv2 as pbp
import pandas as pd
import time
import os
gamelog_path = './data/nba_gamelogs/'
pbp_path = './data/nba_pbp/'
# gamelogs = os.listdir(gamelog_path)
gamelogs = './data/nba_gamelogs/nba_gamelogs_2018-19.csv'
for gl in gamelogs:
print(gl)
csv_path = gamelog_path + gl
gl_df = pd.read_csv(csv_path, dtype='str')
game_ids = list(gl_df.GAME_ID.unique())
for g in game_ids:
time.sleep(2)
print(g)
playbyplay = pbp.PlayByPlayV2(game_id=str(g), start_period=0, end_period=0)
pbp_df = playbyplay.get_data_frames()
pbp_df = pbp_df[0]
csv_string = pbp_path + g + '.csv'
pbp_df.to_csv(csv_string)
gamelog_path = './data/nba_gamelogs/'
pbp_path = './data/nba_pbp/'
gamelogs = os.listdir(gamelog_path)
mport nba_api.stats.endpoints.playergamelogs as pg
import pandas as pd
import time
reticulate::repl_python()
library(tidyverse)
gamelogs <- read_csv('./data/nba_gamelogs/nba_gamelogs_2016-17.csv')
unique_games <- unique(gamelogs$GAME_ID)
first_scorer_list <- list()
for (g in unique_games) {
gamelog <- gamelogs %>%
filter(GAME_ID == g)
season <- as.character(gamelog$SEASON_YEAR[[1]])
matchup <- as.character(gamelog$MATCHUP[[1]])
gamedate <- as.Date(gamelog$GAME_DATE[[1]])
csv_path <- paste0('./data/nba_pbp/', g, '.csv')
pbp_1q <- read_csv(csv_path) %>%
filter(!is.na(SCORE)) %>%
filter(EVENTNUM == min(EVENTNUM))
first_scorer_player_id <- as.character(pbp_1q$PLAYER1_ID)
first_scorer_player_name <- as.character(pbp_1q$PLAYER1_NAME)
first_scorer_team_id <- as.character(pbp_1q$PLAYER1_TEAM_ID)
first_scorer_team_abbrev <- as.character(pbp_1q$PLAYER1_TEAM_ABBREVIATION)
output <- tibble(
season = season,
game_date = gamedate,
game_id = g,
matchup = matchup,
first_scorer_id = first_scorer_player_id,
first_scorer_name = first_scorer_player_name,
first_scorer_team_id = first_scorer_team_id,
first_scorer_team = first_scorer_team_abbrev
)
first_scorer_list[[g]] <- output
}
first_scorer_df <- bind_rows(first_scorer_list)
# pick a team using the matchup abbrevs to see how often they score first points and which players do it most
abbrev <- 'PHI'
team_games <- first_scorer_df %>%
filter(grepl(abbrev, matchup))
mean(team_games$first_scorer_team == abbrev)
sort(table(team_games$first_scorer_name[team_games$first_scorer_team == abbrev]))
library(tidyverse)
gamelogs <- read_csv('./data/nba_gamelogs/nba_gamelogs_2020-21.csv')
unique_games <- unique(gamelogs$GAME_ID)
first_scorer_list <- list()
for (g in unique_games) {
gamelog <- gamelogs %>%
filter(GAME_ID == g)
season <- as.character(gamelog$SEASON_YEAR[[1]])
matchup <- as.character(gamelog$MATCHUP[[1]])
gamedate <- as.Date(gamelog$GAME_DATE[[1]])
csv_path <- paste0('./data/nba_pbp/', g, '.csv')
pbp_1q <- read_csv(csv_path) %>%
filter(!is.na(SCORE)) %>%
filter(EVENTNUM == min(EVENTNUM))
first_scorer_player_id <- as.character(pbp_1q$PLAYER1_ID)
first_scorer_player_name <- as.character(pbp_1q$PLAYER1_NAME)
first_scorer_team_id <- as.character(pbp_1q$PLAYER1_TEAM_ID)
first_scorer_team_abbrev <- as.character(pbp_1q$PLAYER1_TEAM_ABBREVIATION)
output <- tibble(
season = season,
game_date = gamedate,
game_id = g,
matchup = matchup,
first_scorer_id = first_scorer_player_id,
first_scorer_name = first_scorer_player_name,
first_scorer_team_id = first_scorer_team_id,
first_scorer_team = first_scorer_team_abbrev
)
first_scorer_list[[g]] <- output
}
first_scorer_df <- bind_rows(first_scorer_list)
# pick a team using the matchup abbrevs to see how often they score first points and which players do it most
abbrev <- 'PHI'
team_games <- first_scorer_df %>%
filter(grepl(abbrev, matchup))
mean(team_games$first_scorer_team == abbrev)
sort(table(team_games$first_scorer_name[team_games$first_scorer_team == abbrev]))
abbrev <- 'GSW'
team_games <- first_scorer_df %>%
filter(grepl(abbrev, matchup))
mean(team_games$first_scorer_team == abbrev)
sort(table(team_games$first_scorer_name[team_games$first_scorer_team == abbrev]))
abbrev <- 'ORL'
team_games <- first_scorer_df %>%
filter(grepl(abbrev, matchup))
mean(team_games$first_scorer_team == abbrev)
sort(table(team_games$first_scorer_name[team_games$first_scorer_team == abbrev]))
abbrev <- 'HOU'
team_games <- first_scorer_df %>%
filter(grepl(abbrev, matchup))
mean(team_games$first_scorer_team == abbrev)
sort(table(team_games$first_scorer_name[team_games$first_scorer_team == abbrev]))
library(tidyverse)
gamelogs <- read_csv('./data/nba_gamelogs/nba_gamelogs_2019-20.csv')
unique_games <- unique(gamelogs$GAME_ID)
first_scorer_list <- list()
for (g in unique_games) {
gamelog <- gamelogs %>%
filter(GAME_ID == g)
season <- as.character(gamelog$SEASON_YEAR[[1]])
matchup <- as.character(gamelog$MATCHUP[[1]])
gamedate <- as.Date(gamelog$GAME_DATE[[1]])
csv_path <- paste0('./data/nba_pbp/', g, '.csv')
pbp_1q <- read_csv(csv_path) %>%
filter(!is.na(SCORE)) %>%
filter(EVENTNUM == min(EVENTNUM))
first_scorer_player_id <- as.character(pbp_1q$PLAYER1_ID)
first_scorer_player_name <- as.character(pbp_1q$PLAYER1_NAME)
first_scorer_team_id <- as.character(pbp_1q$PLAYER1_TEAM_ID)
first_scorer_team_abbrev <- as.character(pbp_1q$PLAYER1_TEAM_ABBREVIATION)
output <- tibble(
season = season,
game_date = gamedate,
game_id = g,
matchup = matchup,
first_scorer_id = first_scorer_player_id,
first_scorer_name = first_scorer_player_name,
first_scorer_team_id = first_scorer_team_id,
first_scorer_team = first_scorer_team_abbrev
)
first_scorer_list[[g]] <- output
}
first_scorer_df <- bind_rows(first_scorer_list)
# pick a team using the matchup abbrevs to see how often they score first points and which players do it most
abbrev <- 'HOU'
team_games <- first_scorer_df %>%
filter(grepl(abbrev, matchup))
mean(team_games$first_scorer_team == abbrev)
sort(table(team_games$first_scorer_name[team_games$first_scorer_team == abbrev]))
getwd()
reticulate::repl_python()
library(tidyverse)
gamelogs <- read_csv('./data/nba_gamelogs/nba_gamelogs_2015-16.csv')
unique_games <- unique(gamelogs$GAME_ID)
first_scorer_list <- list()
for (g in unique_games) {
gamelog <- gamelogs %>%
filter(GAME_ID == g)
season <- as.character(gamelog$SEASON_YEAR[[1]])
matchup <- as.character(gamelog$MATCHUP[[1]])
gamedate <- as.Date(gamelog$GAME_DATE[[1]])
csv_path <- paste0('./data/nba_pbp/', g, '.csv')
pbp_1q <- read_csv(csv_path) %>%
filter(!is.na(SCORE)) %>%
filter(EVENTNUM == min(EVENTNUM))
first_scorer_player_id <- as.character(pbp_1q$PLAYER1_ID)
first_scorer_player_name <- as.character(pbp_1q$PLAYER1_NAME)
first_scorer_team_id <- as.character(pbp_1q$PLAYER1_TEAM_ID)
first_scorer_team_abbrev <- as.character(pbp_1q$PLAYER1_TEAM_ABBREVIATION)
output <- tibble(
season = season,
game_date = gamedate,
game_id = g,
matchup = matchup,
first_scorer_id = first_scorer_player_id,
first_scorer_name = first_scorer_player_name,
first_scorer_team_id = first_scorer_team_id,
first_scorer_team = first_scorer_team_abbrev
)
first_scorer_list[[g]] <- output
}
first_scorer_df <- bind_rows(first_scorer_list)
# pick a team using the matchup abbrevs to see how often they score first points and which players do it most
abbrev <- 'HOU'
team_games <- first_scorer_df %>%
filter(grepl(abbrev, matchup))
mean(team_games$first_scorer_team == abbrev)
sort(table(team_games$first_scorer_name[team_games$first_scorer_team == abbrev]))
abbrev <- 'GSW'
team_games <- first_scorer_df %>%
filter(grepl(abbrev, matchup))
mean(team_games$first_scorer_team == abbrev)
sort(table(team_games$first_scorer_name[team_games$first_scorer_team == abbrev]))
source('~/Documents/gambling_stuff/first_basket/get first scorers.R', echo=TRUE)
abbrev <- 'MIA'
team_games <- first_scorer_df %>%
filter(grepl(abbrev, matchup))
mean(team_games$first_scorer_team == abbrev)
sort(table(team_games$first_scorer_name[team_games$first_scorer_team == abbrev]))
abbrev <- 'CLE'
team_games <- first_scorer_df %>%
filter(grepl(abbrev, matchup))
mean(team_games$first_scorer_team == abbrev)
sort(table(team_games$first_scorer_name[team_games$first_scorer_team == abbrev]))
abbrev <- 'WAS'
team_games <- first_scorer_df %>%
filter(grepl(abbrev, matchup))
mean(team_games$first_scorer_team == abbrev)
sort(table(team_games$first_scorer_name[team_games$first_scorer_team == abbrev]))
abbrev <- 'OKC'
team_games <- first_scorer_df %>%
filter(grepl(abbrev, matchup))
mean(team_games$first_scorer_team == abbrev)
sort(table(team_games$first_scorer_name[team_games$first_scorer_team == abbrev]))
library(tidyverse)
gamelogs <- read_csv('./data/nba_gamelogs/nba_gamelogs_2015-16.csv')
unique_games <- unique(gamelogs$GAME_ID)
first_scorer_list <- list()
for (g in unique_games) {
gamelog <- gamelogs %>%
filter(GAME_ID == g)
season <- as.character(gamelog$SEASON_YEAR[[1]])
matchup <- as.character(gamelog$MATCHUP[[1]])
gamedate <- as.Date(gamelog$GAME_DATE[[1]])
csv_path <- paste0('./data/nba_pbp/', g, '.csv')
pbp_1q <- read_csv(csv_path) %>%
filter(!is.na(SCORE)) %>%
filter(EVENTNUM == min(EVENTNUM))
first_scorer_player_id <- as.character(pbp_1q$PLAYER1_ID)
first_scorer_player_name <- as.character(pbp_1q$PLAYER1_NAME)
first_scorer_team_id <- as.character(pbp_1q$PLAYER1_TEAM_ID)
first_scorer_team_abbrev <- as.character(pbp_1q$PLAYER1_TEAM_ABBREVIATION)
output <- tibble(
season = season,
game_date = gamedate,
game_id = g,
matchup = matchup,
first_scorer_id = first_scorer_player_id,
first_scorer_name = first_scorer_player_name,
first_scorer_team_id = first_scorer_team_id,
first_scorer_team = first_scorer_team_abbrev
)
first_scorer_list[[g]] <- output
}
first_scorer_df <- bind_rows(first_scorer_list)
# pick a team using the matchup abbrevs to see how often they score first points and which players do it most
abbrev <- 'OKC'
team_games <- first_scorer_df %>%
filter(grepl(abbrev, matchup))
mean(team_games$first_scorer_team == abbrev)
sort(table(team_games$first_scorer_name[team_games$first_scorer_team == abbrev]))
gamelogs <- read_csv('./data/nba_gamelogs/nba_gamelogs_2020-21.csv')
unique_games <- unique(gamelogs$GAME_ID)
first_scorer_list <- list()
for (g in unique_games) {
gamelog <- gamelogs %>%
filter(GAME_ID == g)
season <- as.character(gamelog$SEASON_YEAR[[1]])
matchup <- as.character(gamelog$MATCHUP[[1]])
gamedate <- as.Date(gamelog$GAME_DATE[[1]])
csv_path <- paste0('./data/nba_pbp/', g, '.csv')
pbp_1q <- read_csv(csv_path) %>%
filter(!is.na(SCORE)) %>%
filter(EVENTNUM == min(EVENTNUM))
first_scorer_player_id <- as.character(pbp_1q$PLAYER1_ID)
first_scorer_player_name <- as.character(pbp_1q$PLAYER1_NAME)
first_scorer_team_id <- as.character(pbp_1q$PLAYER1_TEAM_ID)
first_scorer_team_abbrev <- as.character(pbp_1q$PLAYER1_TEAM_ABBREVIATION)
output <- tibble(
season = season,
game_date = gamedate,
game_id = g,
matchup = matchup,
first_scorer_id = first_scorer_player_id,
first_scorer_name = first_scorer_player_name,
first_scorer_team_id = first_scorer_team_id,
first_scorer_team = first_scorer_team_abbrev
)
first_scorer_list[[g]] <- output
}
first_scorer_df <- bind_rows(first_scorer_list)
# pick a team using the matchup abbrevs to see how often they score first points and which players do it most
abbrev <- 'MIN'
team_games <- first_scorer_df %>%
filter(grepl(abbrev, matchup))
mean(team_games$first_scorer_team == abbrev)
sort(table(team_games$first_scorer_name[team_games$first_scorer_team == abbrev]))
abbrev <- 'CHA'
team_games <- first_scorer_df %>%
filter(grepl(abbrev, matchup))
mean(team_games$first_scorer_team == abbrev)
sort(table(team_games$first_scorer_name[team_games$first_scorer_team == abbrev]))
abbrev <- 'WAS'
team_games <- first_scorer_df %>%
filter(grepl(abbrev, matchup))
mean(team_games$first_scorer_team == abbrev)
sort(table(team_games$first_scorer_name[team_games$first_scorer_team == abbrev]))
abbrev <- 'NYK'
team_games <- first_scorer_df %>%
filter(grepl(abbrev, matchup))
mean(team_games$first_scorer_team == abbrev)
sort(table(team_games$first_scorer_name[team_games$first_scorer_team == abbrev]))
abbrev <- 'NOP'
team_games <- first_scorer_df %>%
filter(grepl(abbrev, matchup))
mean(team_games$first_scorer_team == abbrev)
sort(table(team_games$first_scorer_name[team_games$first_scorer_team == abbrev]))
abbrev <- 'DAL'
team_games <- first_scorer_df %>%
filter(grepl(abbrev, matchup))
mean(team_games$first_scorer_team == abbrev)
sort(table(team_games$first_scorer_name[team_games$first_scorer_team == abbrev]))
abbrev <- 'ORL'
team_games <- first_scorer_df %>%
filter(grepl(abbrev, matchup))
mean(team_games$first_scorer_team == abbrev)
sort(table(team_games$first_scorer_name[team_games$first_scorer_team == abbrev]))
abbrev <- 'SAC'
team_games <- first_scorer_df %>%
filter(grepl(abbrev, matchup))
mean(team_games$first_scorer_team == abbrev)
sort(table(team_games$first_scorer_name[team_games$first_scorer_team == abbrev]))
abbrev <- 'UTA'
team_games <- first_scorer_df %>%
filter(grepl(abbrev, matchup))
mean(team_games$first_scorer_team == abbrev)
sort(table(team_games$first_scorer_name[team_games$first_scorer_team == abbrev]))
abbrev <- 'MIL'
team_games <- first_scorer_df %>%
filter(grepl(abbrev, matchup))
mean(team_games$first_scorer_team == abbrev)
sort(table(team_games$first_scorer_name[team_games$first_scorer_team == abbrev]))
abbrev <- 'CLE'
team_games <- first_scorer_df %>%
filter(grepl(abbrev, matchup))
mean(team_games$first_scorer_team == abbrev)
sort(table(team_games$first_scorer_name[team_games$first_scorer_team == abbrev]))
abbrev <- 'POR'
team_games <- first_scorer_df %>%
filter(grepl(abbrev, matchup))
mean(team_games$first_scorer_team == abbrev)
sort(table(team_games$first_scorer_name[team_games$first_scorer_team == abbrev]))
reticulate::repl_python()
