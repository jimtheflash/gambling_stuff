import nba_api.stats.endpoints.playbyplayv2 as pbp
import pandas as pd
import time
import os
gamelogs = './data/nba_gamelogs/nba_gamelogs_2018-19.csv'
gl = gamelogs[0]
gl
gl
gamelogs
for gl in gamelogs:
print(gl)
csv_path = gamelog_path + gl
gl_df = pd.read_csv(csv_path, dtype='str')
game_ids = list(gl_df.GAME_ID.unique())
for g in game_ids:
time.sleep(2)
print(g)
playbyplay = pbp.PlayByPlayV2(game_id=str(g), start_period=0, end_period=0)
pbp_df = playbyplay.get_data_frames()
pbp_df = pbp_df[0]
csv_string = pbp_path + g + '.csv'
pbp_df.to_csv(csv_string)
import nba_api.stats.endpoints.playbyplayv2 as pbp
import pandas as pd
import time
import os
gamelog_path = './data/nba_gamelogs/'
pbp_path = './data/nba_pbp/'
# gamelogs = os.listdir(gamelog_path)
gamelogs = './data/nba_gamelogs/nba_gamelogs_2018-19.csv'
for gl in gamelogs:
print(gl)
csv_path = gamelog_path + gl
gl_df = pd.read_csv(csv_path, dtype='str')
game_ids = list(gl_df.GAME_ID.unique())
for g in game_ids:
time.sleep(2)
print(g)
playbyplay = pbp.PlayByPlayV2(game_id=str(g), start_period=0, end_period=0)
pbp_df = playbyplay.get_data_frames()
pbp_df = pbp_df[0]
csv_string = pbp_path + g + '.csv'
pbp_df.to_csv(csv_string)
gamelog_path = './data/nba_gamelogs/'
pbp_path = './data/nba_pbp/'
gamelogs = os.listdir(gamelog_path)
mport nba_api.stats.endpoints.playergamelogs as pg
import pandas as pd
import time
reticulate::repl_python()
